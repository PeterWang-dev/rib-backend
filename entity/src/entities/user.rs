//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub password: String,
    pub first_name: Option<String>,
    pub last_name: Option<String>,
    pub birthday: Option<DateTimeLocal>,
    pub address: Option<String>,
    pub phone_number: String,
    pub email_address: String,
    #[sea_orm(default = "Expr::current_time()")]
    pub registration_time: DateTimeLocal,
    pub role_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::book::Entity")]
    Book,
    #[sea_orm(
        belongs_to = "super::privilege::Entity",
        from = "Column::RoleId",
        to = "super::privilege::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Privilege,
}

impl Related<super::book::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Book.def()
    }
}

impl Related<super::privilege::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Privilege.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
